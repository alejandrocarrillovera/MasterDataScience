library(mosaic)
#PRACTICA 3
#Librerias
library(mosaicCalc)
#Exercise 1
a <- mosaicCalc::D(3*x^2 - 2*x + 4~ x)
a
#Exercise 1
a <- mosaicCalc::D(3*x^2 - 2*x + 4 ~ x)
a
a(0)
plotFun(a, x.lim=range(0,10))
a(0)
#PRACTICA 3
#Librerias
library(mosaicCalc)
library(mosaic)
#Exercise 1
#Apartado A
a <- mosaicCalc::D(3*x^2 - 2*x + 4 ~ x)
a(0)
#La derivada de a con x=0 es de -2
#Apartado B
plotFun(a, x.lim=range(0,10))
#Exercise 2
#Apartado A
b <- mosaicCalc::D(5*exp(.2*x) ~ x)
b(0)
#La derivada de b con x=0 es de 1
#Apartado b
plotFun(b, x.lim=range(0,10))
plotFun(5*exp(.2*x), x.lim=range(0,10))
plotFun(5*exp(.2*x)~ x, x.lim=range(0,10))
#La derivada de b con x=0 es de 1
#Apartado b
plotFun(b, x.lim=range(0,10))
plotFun(5*exp(.2*x)~ x, x.lim=range(0,10))
#La derivada de b con x=0 es de 1
#Apartado b
plotFun(b, x.lim=range(0,10))
plotFun(5*exp(.2*x)~ x, x.lim=range(0,10))
#La derivada de b con x=0 es de 1
#Apartado b
plotFun(b, x.lim=range(0,10))
plotFun(5*exp(.2*x)~ x, x.lim=range(0,10))
#La derivada de b con x=0 es de 1
#Apartado b
plotFun(b, x.lim=range(0,10))
plotFun(5*exp(.2*x)~ x, x.lim=range(0,10))
#La derivada de b con x=0 es de 1
#Apartado b
plotFun(b, x.lim=range(0,10))
plotFun(5*exp(.2*x)~ x, x.lim=range(0,10))
#Exercise 3
c <- mosaicCalc::D(exp(-(x^2)) ~ x)
c(-2)
#Exercise 3
c <- makeFun(exp(-(x^2)) ~ x)
#PRACTICA 3
#Librerias
library(mosaicCalc)
library(mosaic)
#Exercise 3
c <- makeFun(exp(-(x^2)) ~ x)
plotFun(c(x)~x,x.lim=range(-2,2))
#Ejercicio 4
d <- mosaicCalc::D(fred^2 ~ginger)
d
e <- mosaicCalc::D(cos(2*t)~t)
e
remove(e)
deriv_e <- mosaicCalc::D(cos(2*t)~t)
deriv_e
second_deriv_e
#Segunda derivada
second_deriv_e <- mosaicCalc::D(j(t) ~t)
second_deriv_e
#Segunda derivada
second_deriv_e <- mosaicCalc::D(second_deriv_e(t) ~t)
second_deriv_e
#Segunda derivada
second_deriv_e <- mosaicCalc::D(deriv_e(t) ~t)
second_deriv_e
#Tercera derivada
third_deriv_e <- mosaicCalc::D(second_deriv_e(t)~t )
third_deriv_e
fourth_deriv_e <- mosaicCalc::D(third_deriv_e(t)~t ) #Cuarta derivada
fourth_deriv_e
#Exercise 6
#Primera derivada
deriv_f <- mosaicCalc::D(cos(2*t^2)~t)
deriv_f
deriv_f
#Segunda derivada
second_deriv_f <- mosaicCalc::D(deriv_f(t) ~t)
second_deriv_f
#Tercera derivada
third_deriv_f <- mosaicCalc::D(second_deriv_f(t)~t )
third_deriv_f
#Exercise 6
#Primera derivada
deriv_f <- mosaicCalc::D(cos(2*t^2)~t)
deriv_f
#Segunda derivada
second_deriv_f <- mosaicCalc::D(deriv_f(t) ~t)
second_deriv_f
#Tercera derivada
third_deriv_f <- mosaicCalc::D(second_deriv_f(t)~t )
third_deriv_f
plotFun(fourth_deriv_f, x.lim=range(0,5))
#Cuarta derivada
fourth_deriv_f <- mosaicCalc::D(third_deriv_f(t)~t ) #Cuarta derivada
fourth_deriv_f
plotFun(fourth_deriv_f, x.lim=range(0,5))
#Exercise 7
#Vemos que la derivada parcial respecto a x es diferene que la derivada parcial respecto a y, por lo tanto la primera afirmacion es FALSA
px <- mosaicCalc::D(x*sin(y) ~ x )
py <- mosaicCalc::D(x*sin(y) ~ y )
px
py
#Segunda derivada parcial. Vemos nuevamente que son diferentes, por lo tanto:FALSO
pxx <- mosaicCalc::D(x*sin(y) ~ x&x )
pyy <- mosaicCalc::D(x*sin(y) ~ y&y )
pxx
pyy
#Derivadas parciales cruzdas. Vemos que tienen el mismo reslutado (cos(y)), por lo tanto: VERDADERO
pxy <- mosaicCalc::D(x*sin(y) ~ x & y)
pyx <- mosaicCalc::D(x*sin(y) ~ y & x)
pxy
pyx
