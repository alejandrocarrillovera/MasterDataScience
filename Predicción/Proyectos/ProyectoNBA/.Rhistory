library(readr)
nba <- read_csv("nba.csv")
View(nba)
library(readr)
nba <- read_csv("nba.csv")
View(nba)
salarios <- nba$Salary
library(tidyverse)
#Cargamos la base de datos de los jugadores de la NBA
library(readr)
library(MASS)
library(tidyverse)
#Cargamos la base de datos de los jugadores de la NBA
library(readr)
library(TeachingDemos)
View(nba)
View(nba)
#Vamos a renombrar todas las variables para estudiarlas más fácil
rename(nba,salario=Salary)
#Vamos a renombrar todas las variables para estudiarlas más fácil
rename(nba,Salario=salario)
#Vamos a renombrar todas las variables para estudiarlas más fácil
rename(nba,Salario=Salario)
View(nba)
#Vamos a renombrar todas las variables para estudiarlas más fácil
rename(nba,Salario=salarios
#Vamos a renombrar todas las variables para estudiarlas más fácil
rename(nba,Salario=salarios)
#Vamos a renombrar todas las variables para estudiarlas más fácil
rename(nba,Salario=salarios)
View(nba)
View(nba)
#Vamos a renombrar todas las variables para estudiarlas más fácil
rename(nba,Salario=Salary)
#Cargamos la base de datos de los jugadores de la NBA
library(readr)
library(tidyverse)
library(MASS)
library(TeachingDemos)
#Vamos a renombrar todas las variables para estudiarlas más fácil
rename(nba,Salario=Salary)
View(nba)
nba<- rename(nba,Salario=Salary)
nba<- rename(nba,Salario=Salary)
nba<- rename(nba,Salario=Salary)
nba<- rename(nba,Salario=Salary)#Tenemos que responder a la pregunta, ¿cuánta relación hay entre los datos de los jugadores y sus salarios?
View(nba)
```{r}
#Cargamos la base de datos de los jugadores de la NBA
library(readr)
library(tidyverse)
library(MASS)
library(TeachingDemos)
nba <- read_csv("nba.csv")
View(nba)
View(nba)
#Vamos a renombrar todas las variables para estudiarlas más fácil
nba<- rename(nba,Jugador=Player)
nba<- rename(nba,Salario=Salary)
nba<- rename(nba,Pais=NBA_Country)
nba<- rename(nba,Draft=NBA_DraftNumber)
nba<- rename(nba,Edad=Age)
nba<- rename(nba,Equipo=Tm)
nba<- rename(nba,Partidos=G)
nba<- rename(nba,Minutos_jugados=MP)
nba<- rename(nba,Eficiencia=PER)
nba<- rename(nba,Exito=TS%)
nba<- rename(nba,Triples="3PAr")
nba<- rename(nba,Tiros_Libres=FTr)
nba<- rename(nba,Reb_Atq=ORB%)
nba<- rename(nba,Reb_Def=DRB%)
nba<- rename(nba,Reb_Total=TRB%)
nba<- rename(nba,Asistencias=AST%)
nba<- rename(nba,Robos=STL%)
nba<- rename(nba,Bloqueos=BLK%)
nba<- rename(nba,Porc_perdidas=TOV%)
nba<- rename(nba,Porc_participacion=USG%)
nba<- rename(nba,Buen_Atq=OWS)
nba<- rename(nba,Buen_Def=DWS)
nba<- rename(nba,Buen_Tot=WS)
nba<- rename(nba,Buen_Tot_48="WS/48")
nba<- rename(nba,Calidad_Atq=OBPM)
nba<- rename(nba,Calidad_Def=DBPM)
View(nba)
nba<- rename(nba,Exito="TS%")
nba<- rename(nba,Triples="3PAr")
nba<- rename(nba,Reb_Atq="ORB%")
nba<- rename(nba,Reb_Def="DRB%")
nba<- rename(nba,Reb_Total="TRB%")
nba<- rename(nba,Asistencias="AST%")
nba<- rename(nba,Robos="STL%")
nba<- rename(nba,Bloqueos="BLK%")
nba<- rename(nba,Porc_perdidas="TOV%")
nba<- rename(nba,Porc_participacion="USG%")
View(nba)
#Tenemos que responder a la pregunta, ¿cuánta relación hay entre los datos de los jugadores y sus salarios?
#Para ello asignamos como variable dependiente al salario
remove(salarios)
#Tenemos que responder a la pregunta, ¿cuánta relación hay entre los datos de los jugadores y sus salarios?
#Para ello asignamos como variable dependiente al salario
dep<- nba$Salario
#Tenemos que responder a la pregunta, ¿cuánta relación hay entre los datos de los jugadores y sus salarios?
#Para ello asignamos como variable dependiente al salario
vec_x<-nba$Salario
remove(dep)
#Tenemos que responder a la pregunta, ¿cuánta relación hay entre los datos de los jugadores y sus salarios?
#Para ello asignamos como variable dependiente al salario
vec_y<-nba$Salario
remove(vec_x)
head(vec_y)
mat_x<-cbind(1,nba[,2:4])
View(mat_x)
remove(mat_x)
mat_x<-cbind(1,nba[,2:28])
head(vec_y)
head.matrix(mat_x)
View(mat_x)
#Cargamos la base de datos de los jugadores de la NBA
library(readr)
library(tidyverse)
library(MASS)
library(TeachingDemos)
nba <- read_csv("nba.csv")
#Vamos a renombrar todas las variables para estudiarlas más fácil
nba<- rename(nba,Jugador=Player)
nba<- rename(nba,Salario=Salary)
nba<- rename(nba,Pais=NBA_Country)
nba<- rename(nba,Draft=NBA_DraftNumber)
nba<- rename(nba,Edad=Age)
nba<- rename(nba,Equipo=Tm)
nba<- rename(nba,Partidos=G)
nba<- rename(nba,Minutos_jugados=MP)
nba<- rename(nba,Eficiencia=PER)
nba<- rename(nba,Exito="TS%")
nba<- rename(nba,Triples="3PAr")
nba<- rename(nba,Tiros_Libres=FTr)
nba<- rename(nba,Reb_Atq="ORB%")
nba<- rename(nba,Reb_Def="DRB%")
nba<- rename(nba,Reb_Total="TRB%")
nba<- rename(nba,Asistencias="AST%")
nba<- rename(nba,Robos="STL%")
nba<- rename(nba,Bloqueos="BLK%")
nba<- rename(nba,Porc_perdidas="TOV%")
nba<- rename(nba,Porc_participacion="USG%")
nba<- rename(nba,Buen_Atq=OWS)
nba<- rename(nba,Buen_Def=DWS)
nba<- rename(nba,Buen_Tot=WS)
nba<- rename(nba,Buen_Tot_48="WS/48")
nba<- rename(nba,Calidad_Atq=OBPM)
nba<- rename(nba,Calidad_Def=DBPM)
#Tenemos que responder a la pregunta, ¿cuánta relación hay entre los datos de los jugadores y sus salarios?
#Para ello asignamos como variable dependiente al salario
vec_y<-nba$Salario
mat_x<-cbind(1,nba[,2:28])
head(vec_y)
head.matrix(mat_x)
#Omitimos los NAs
nba<- na.omit(nba)
#Tenemos que responder a la pregunta, ¿cuánta relación hay entre los datos de los jugadores y sus salarios?
#Para ello asignamos como variable dependiente al salario
vec_y<-nba$Salario
mat_x<-cbind(1,nba[,2:28])
head(vec_y)
head.matrix(mat_x)
library (leaps)
install.packages("leaps")
library (leaps)
regfit.full=regsubsets(Salario~.-X,nba)
regfit.full=regsubsets(Salario~.,nba)
View(nba)
regfit.full=regsubsets(Salario~.-Jugador,nba)
regres1=lm(Salario~.,data=nba)
View(regres1)
summary(regres1)
regres1=lm(Salario~.-Jugador,data=nba)
regfit.full=regsubsets(Salario~.-Jugador,nba)
summary(regres1)
regres1=lm(Salario~.-Jugador-Pais -Equipo,data=nba)
summary(regres1)
regres1=lm(Salario~.-Jugador,data=nba)
summary(regres1)
#En la primera regresión utilizamos todas las variables para ver cuales son significativas y cuales no.
regres1=lm(Salario~.,data=nba)
summary(regres1)
#En la primera regresión utilizamos todas las variables para ver cuales son significativas y cuales no.
#Quitamos la variable jugador porque no son significativos
regres1=lm(Salario~.-Jugador,data=nba)
summary(regres1)
#En esta primera regresión podemos ver que hay variables más significativas que otras. Dentro de las más significativas,
#encontramos algunos paises, Partidos, Minutos_jugados, Draft y Edad, por lo que vamos a probar una nueva regresión con
#estas variables significativas
regres2=lm(Salario~Pais+Partidos+Minutos_jugados+Edad+Draft,data=nba)
summary(regres2)
regfit.full=regsubsets(Salario~Pais+Partidos+Minutos_jugados+Edad+Draft,nba)
summary(regfit.full)
#En la primera regresión utilizamos todas las variables para ver cuales son significativas y cuales no.
#Quitamos la variable jugador porque no son significativos
regres1=lm(Salario~.-Jugador,data=nba)
summary(regres1)
regfit.full=regsubsets(Sales~.-Jugador,nba)
regfit.full=regsubsets(Salario~.-Jugador,nba)
regfit.full=regsubsets(Salario~.-Jugador,nba, "forward")
regfit.full=regsubsets(Salario ~ .-Jugador,nba, "forward")
regfit.full=regsubsets(Salario ~ .-Jugador-Pais,nba, "forward")
regfit.full=regsubsets(Salario ~ .-Jugador-Pais,nba, method = "forward")
summary(regfit.full)
#Cargamos la base de datos de los jugadores de la NBA
library(readr)
library(tidyverse)
library(MASS)
library(TeachingDemos)
library (leaps)
regfit.full=regsubsets(Salario ~ .-Jugador-Pais,nba, method = "forward")
summary(regfit.full)
summary(regfit.full)$bic
#Una vez hecho esto me salen 8 modelos con distintas variables en cada uno.
#Voy a comparar estos modelos para ver cuales de ellos tienen menos BIC
summary(regfit.full)$bic
summary(regfit.full)
modelo1 <- lm(Salario~ Draft+Edad+Partidos+Buen_Tot,data=nba)
modelo2<- lm(Salario~Draft+Edad+Partidos+Minutos_jugados+Buen_Tot,data=nba)
modelo3<- lm(Salario~Draft+Edad+Partidos+Minutos_jugados+Reb_Def+Buen_Tot,data=nba)
modelo4<- lm(Salario~Draft+Edad+EquipoHOU+Partidos+Minutos_jugados+Reb_Def+Buen_Tot,data=nba)
modelo4<- lm(Salario~Draft+Edad+Equipo+Partidos+Minutos_jugados+Reb_Def+Buen_Tot,data=nba)
library(ISLR)
install.packages("ISLR")
library(ISLR)
set.seed(101)
numData=nrow(nba)
train=sample(numData ,numData/2)
regres.train =lm(Salario~ Draft+Edad+Partidos+Buen_Tot,nba ,subset =train )
attach(nba)
mean((Salario-predict(regres.train ,Auto))[-train ]^2)
detach(nba)
regres.train2 =lm(Salario~Draft+Edad+Partidos+Minutos_jugados+Buen_Tot,nba ,subset =train )
attach(nba)
mean((Salario-predict(regres.train ,Auto))[-train ]^2)
detach(nba)
#El error cuadrático medio es de 3.384525e+13
#Para el modelo 2
regres.train2 =lm(Salario~Draft+Edad+Partidos+Minutos_jugados+Buen_Tot,nba ,subset =train )
attach(nba)
mean((Salario-predict(regres.train ,Auto))[-train ]^2)
detach(nba)
#El error cuadrático medio es de 3.384525e+13
#Para el modelo 2
regres.train2 =lm(Salario~Draft+Edad+Partidos+Minutos_jugados+Buen_Tot,nba ,subset =train )
attach(nba)
mean((Salario-predict(regres.train2 ,Auto))[-train ]^2)
detach(nba)
#Para el modelo 3
regres.train3 =lm(Salario~Draft+Edad+Partidos+Minutos_jugados+Buen_Tot,nba ,subset =train )
attach(nba)
mean((Salario-predict(regres.train3 ,Auto))[-train ]^2)
detach(nba)
#Para el modelo 2
regres.train2 =lm(Salario~Draft+Edad+Partidos+Minutos_jugados+Buen_Tot,nba ,subset =train )
attach(nba)
mean((Salario-predict(regres.train2 ,Auto))[-train ]^2)
#Para el modelo 3
regres.train3 =lm(Salario~Draft+Edad+Partidos+Minutos_jugados+Reb_Def+Buen_Tot,data,subset =train )
attach(nba)
#Para el modelo 3
regres.train3 =lm(Salario~Draft+Edad+Partidos+Minutos_jugados+Reb_Def+Buen_Tot,nba,subset =train )
attach(nba)
mean((Salario-predict(regres.train3 ,Auto))[-train ]^2)
detach(nba)
detach(nba)
detach(nba)
detach(nba)
#Para el modelo 4
regres.train4 =lm(Salario~Draft+Edad+Equipo+Partidos+Minutos_jugados+Reb_Def+Buen_Tot,nba,subset =train )
attach(nba)
mean((Salario-predict(regres.train4 ,Auto))[-train ]^2)
detach(nba)
#El error cuadrático medio para el modelo 4 es de 3.541209e+13
sqrt(3.541209e+13)
#El error cuadrático medio para el modelo 4 es de 3.541209e+13
print(sqrt(3.541209e+13))
sqrt(3.384525e+13)
sqrt(3.101454e+13)
sqrt(3.101454e+13)
sqrt(3.09954e+13)
sqrt(3.09954e+13)
sqrt(3.09954e+13)
#Para el modelo 1
set.seed(250)
numData=nrow(nba)
train=sample(numData ,numData/2)
regres.train =lm(Salario~ Draft+Edad+Partidos+Buen_Tot,nba ,subset =train )
attach(nba)
mean((Salario-predict(regres.train ,Auto))[-train ]^2)
detach(nba)
#Cargamos la base de datos de los jugadores de la NBA
library(readr)
library(tidyverse)
library(MASS)
library(TeachingDemos)
library (leaps)
library(ISLR)
#Para el modelo 1
set.seed(250)
numData=nrow(nba)
train=sample(numData ,numData/2)
regres.train =lm(Salario~ Draft+Edad+Partidos+Buen_Tot,nba ,subset =train )
mean((Salario-predict(regres.train ,Auto))[-train ]^2)
attach(nba)
mean((Salario-predict(regres.train ,Auto))[-train ]^2)
detach(nba)
#Para el modelo 2
regres.train2 =lm(Salario~Draft+Edad+Partidos+Minutos_jugados+Buen_Tot,nba ,subset =train )
attach(nba)
mean((Salario-predict(regres.train2 ,Auto))[-train ]^2)
detach(nba)
sqrt(3.101454e+13)
#Para el modelo 3
regres.train3 =lm(Salario~Draft+Edad+Partidos+Minutos_jugados+Reb_Def+Buen_Tot,nba,subset =train )
attach(nba)
mean((Salario-predict(regres.train3 ,Auto))[-train ]^2)
detach(nba)
sqrt(3.09954e+13)
regres.train =lm(Salario~ Draft+Edad+Partidos+Buen_Tot,nba ,subset =train )
attach(nba)
mean((Salario-predict(regres.train ,Auto))[-train ]^2)
sqrt(2.725836e+13)
#Para el modelo 2
regres.train2 =lm(Salario~Draft+Edad+Partidos+Minutos_jugados+Buen_Tot,nba ,subset =train )
attach(nba)
mean((Salario-predict(regres.train2 ,Auto))[-train ]^2)
detach(nba)
detach(nba)
sqrt(2.430289e+13)
#Para el modelo 3
regres.train3 =lm(Salario~Draft+Edad+Partidos+Minutos_jugados+Reb_Def+Buen_Tot,nba,subset =train )
attach(nba)
mean((Salario-predict(regres.train3 ,Auto))[-train ]^2)
sqrt(2.420056e+13)
#Para el modelo 4
regres.train4 =lm(Salario~Draft+Edad+Equipo+Partidos+Minutos_jugados+Reb_Def+Buen_Tot,nba,subset =train )
attach(nba)
mean((Salario-predict(regres.train4 ,Auto))[-train ]^2)
detach(nba)
detach(nba)
#El error cuadrático medio para el modelo 4 es de 2.767676e+13, el error es de 5.817.667 millones
sqrt(2.767676e+13)
